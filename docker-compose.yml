services:
  clickhouse:
    image: clickhouse/clickhouse-server:25.3.5
    restart: on-failure
    environment:
      CLICKHOUSE_USER: uptrace
      CLICKHOUSE_PASSWORD: uptrace
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8123/ping"]
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ch_data:/var/lib/clickhouse

  postgres:
    image: postgres:17-alpine
    restart: on-failure
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: uptrace
      POSTGRES_PASSWORD: uptrace
      POSTGRES_DB: uptrace
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uptrace -d uptrace"]
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - "pg_data3:/var/lib/postgresql/data/pgdata"

  redis:
    image: redis:6.2.2-alpine
    restart: on-failure

  uptrace:
    image: "uptrace/uptrace:2.0.0"
    #image: 'uptrace/uptrace-dev:latest'
    restart: on-failure
    volumes:
      - ./uptrace.yml:/etc/uptrace/config.yml
    env_file: .env
    ports:
      - "14317:4317"
      - "14318:80"
    depends_on:
      - clickhouse
      - postgres

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.123.0
    restart: on-failure
    volumes:
      - ./otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - uptrace

  # mailpit:
  #   image: axllent/mailpit
  #   restart: always
  #   ports:
  #     - 1025:1025
  #     - 8025:8025
  #   environment:
  #     MP_MAX_MESSAGES: 5000
  #     MP_DATA_FILE: /data/mailpit.db
  #     MP_SMTP_AUTH_ACCEPT_ANY: 1
  #     MP_SMTP_AUTH_ALLOW_INSECURE: 1
  #   volumes:
  #     - mailpit_data:/data

  vector:
    image: timberio/vector:0.28.X-alpine
    volumes:
      - ./vector.toml:/etc/vector/vector.toml:ro

  grafana:
    image: grafana/grafana:12.0.0
    restart: on-failure
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/custom.ini:/etc/grafana/grafana.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"

  prometheus:
    image: prom/prometheus:v2.36.2
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"

volumes:
  ch_data:
  pg_data3:
  prometheus_data:
  mailpit_data:
