version: '3'

services:
  clickhouse:
    image: clickhouse/clickhouse-server:23.7
    restart: on-failure
    environment:
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ch_data1:/var/lib/clickhouse

  postgres:
    image: postgres:15-alpine
    restart: on-failure
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: uptrace
      POSTGRES_PASSWORD: uptrace
      POSTGRES_DB: uptrace
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U uptrace -d uptrace']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - 'pg_data2:/var/lib/postgresql/data/pgdata'
  uptrace:
    image: 'uptrace/uptrace:1.6.2'
    #image: 'uptrace/uptrace-dev:latest'
    restart: on-failure
    # volumes:
    #   - ./uptrace.yml:/etc/uptrace/uptrace.yml
    #environment:
    #  - DEBUG=2
    ports:
      - '14317:14317'
      - '14318:14318'
    labels:
      - traefik.enable=true
      - traefik.http.routers.twir-uptrace.rule=Host(`uptrace.twir.app`)
      - traefik.http.services.twir-uptrace.loadbalancer.server.port=14317
      - traefik.docker.network=traefik-public

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.88.0
    restart: on-failure
    # volumes:
    #   - ./otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  grafana:
    image: grafana/grafana:9.5.3
    restart: on-failure
    # volumes:
    #   - ../../config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    #   - ../../config/grafana/custom.ini:/etc/grafana/grafana.ini
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  prometheus:
    image: prom/prometheus:v2.36.2
    restart: always
    volumes:
      # - ../../config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

volumes:
  ch_data1:
  pg_data2:
  prometheus_data:
